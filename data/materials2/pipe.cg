


struct VIn
{
	float4 p : POSITION;	float3 n : NORMAL;
	float3 t : TANGENT;		float3 uv: TEXCOORD0;
	float4 c : COLOR;
};
struct VOut
{
	float4 p : POSITION;	float3 uv : TEXCOORD0;	float4 wp : TEXCOORD1;
	float3 n : TEXCOORD2;	float3 t  : TEXCOORD3;	float3 b  : TEXCOORD4;
	float4 c : COLOR;
};
VOut main_vp(VIn IN,
	uniform float4x4 wMat,  uniform float4x4 wvpMat,
	uniform float4 fogParams)
{
	VOut OUT;  OUT.uv = IN.uv;
	OUT.wp = mul(wMat, IN.p);
	OUT.p = mul(wvpMat, IN.p);
	OUT.n = IN.n;  OUT.t = IN.t;  OUT.b = cross(IN.t, IN.n);
	OUT.c = IN.c;  //clr
	OUT.wp.w = saturate(fogParams.x * (OUT.p.z - fogParams.y) * fogParams.w);
	return OUT;
}


struct PIn
{	float4 p : POSITION;	float3 uv : TEXCOORD0;	float4 wp : TEXCOORD1;
	float3 n : TEXCOORD2;	float3 t  : TEXCOORD3;	float3 b  : TEXCOORD4;
	float4 c : COLOR;
};
float4 main_fp(PIn IN,
	uniform float4 alphaPars,
	uniform float3 globalAmbient,
	uniform float3 ambient,  uniform float3 lightDif0,  uniform float3 lightSpec0,
	uniform float4 matDif,   uniform float4 matSpec,	uniform float matShininess,
	uniform float3 fogColor,
	uniform float4 lightPos0,  uniform float3 camPos,
	uniform float4x4 iTWMat, 
	uniform sampler2D diffuseMap : TEXUNIT0,
	uniform float isSelected,
	uniform float time,
	uniform sampler2D normalMap : TEXUNIT1): COLOR0
{
	float3 ldir = normalize(lightPos0.xyz - (lightPos0.w * IN.wp.xyz));
	float4 normalTex = tex2D(normalMap, IN.uv.xy);
	float3x3 tbn = float3x3(IN.t, IN.b, IN.n);
	float3 normal = mul(transpose(tbn), normalTex.xyz * 2.f - 1.f);
	normal = normalize(mul((float3x3)iTWMat, normal));
	float3 diffuse = max(dot(ldir, -normal),0);
	float3 camDir = normalize(camPos - IN.wp.xyz);
	float3 halfVec = normalize(ldir + camDir);
	float3 specular = pow(max(dot(-normal, halfVec),0), matShininess);
	float4 diffuseTex = tex2D(diffuseMap, IN.uv.xy);
	float3 diffC = diffuse * lightDif0 * matDif.rgb  * diffuseTex.rgb;
	float3 specC = specular * lightSpec0 * matSpec.rgb;
	float3 clrSUM = diffuseTex.rgb * ambient * globalAmbient + diffC + specC;
	clrSUM = lerp(clrSUM, fogColor, IN.wp.w);
	float alpha = alphaPars.x + alphaPars.y * diffuse.r + alphaPars.z * specular.r + (1 - diffuseTex.r);
	
    clrSUM += isSelected * (float3(0.14, 0.22, 0.36) * (0.5f + 0.1f * cos(3.f * time)));
	alpha += isSelected * (0.36 * (0.5f + 0.1f * cos(3.f * time)));
	
	return float4(clrSUM, alpha);
}
