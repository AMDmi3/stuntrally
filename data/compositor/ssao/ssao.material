
// full screen quad with camera-to-pixel ray calculations

vertex_program ssao_vs cg
{
    source ssao.cg
    profiles vs_4_0 vs_1_1 arbvp1
    entry_point ssao_vs
    default_params
    {
        param_named_auto wvp worldviewproj_matrix
    }
}

fragment_program ssao_ps cg
{
    source ssao.cg
    entry_point ssao_ps
    // will run on anything with pixel shader 2.b and up
    profiles ps_4_0 ps_2_x arbfp1
    default_params
    {
    }
}

vertex_program ssaoBlur_vs cg
{
    source ssao.cg
    profiles vs_4_0 vs_1_1 arbvp1
    entry_point ssaoBlur_vs
    default_params
    {
        param_named_auto wvp worldviewproj_matrix
    }
}
fragment_program ssaoBlurX_ps cg
{
    source ssao.cg
    entry_point ssaoBlurX_ps
    profiles ps_4_0 ps_2_x arbfp1
    default_params
    {
        param_named_auto invTexSize inverse_texture_size 0
    }
}

fragment_program ssaoBlurY_ps cg
{
    source ssao.cg
    entry_point ssaoBlurY_ps
    profiles ps_4_0 ps_2_x arbfp1
    default_params
    {
        param_named_auto invTexSize inverse_texture_size 0
    }
}

vertex_program ssaoMultiply_vs cg
{
    source ssao.cg
    profiles vs_4_0 vs_1_1 arbvp1
    entry_point ssaoMultiply_vs
    default_params
    {
        param_named_auto wvp worldviewproj_matrix
    }
}
fragment_program ssaoMultiply_ps cg
{
    source ssao.cg
    entry_point ssaoMultiply_ps
    profiles ps_4_0 ps_2_x arbfp1
    default_params
    {
    }
}

material ssao
{
    technique
    {
        pass
        {
            vertex_program_ref ssao_vs
            {
            }

            fragment_program_ref ssao_ps
            {
            }

            texture_unit geomMap
            {
                tex_address_mode clamp
                filtering bilinear
            }

            texture_unit randMap
            {
                texture random.png
                filtering none
            }
        }
    }
}

material ssaoBlurX
{
    technique
    {
        pass
        {
			vertex_program_ref ssaoBlur_vs
            {
            }
            fragment_program_ref ssaoBlurX_ps
            {
            }

            texture_unit map
            {
                tex_address_mode clamp
                filtering bilinear
            }

            texture_unit geomMap
            {
                tex_address_mode clamp
                filtering bilinear
            }
        }
    }
}

material ssaoBlurY
{
    technique
    {
        pass
        {
			vertex_program_ref ssaoBlur_vs
            {
            }
            fragment_program_ref ssaoBlurY_ps
            {
            }

            texture_unit map
            {
                tex_address_mode clamp
                filtering bilinear
            }

            texture_unit geomMap
            {
                tex_address_mode clamp
                filtering bilinear
            }
        }
    }
}

material modulate
{
    technique
    {
        pass
        {
        //    lighting off
			vertex_program_ref ssaoMultiply_vs
            {
            }
        
		    fragment_program_ref ssaoMultiply_ps
            {
            }

            texture_unit tex1
            {
                texture white.png
                filtering bilinear
            }

            texture_unit tex2
            {
                texture white.png
                filtering bilinear
            }
        }
    }
}
